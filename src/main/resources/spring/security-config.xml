<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:c="http://www.springframework.org/schema/c"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <description>Konfiguracja Spring Security</description>

    <!-- Włączenie kontroli dostępu do metody przez adnotację @PreAuthorized -->
    <sec:global-method-security pre-post-annotations="enabled"/>

    <!-- url'e, które nie są przetwarzane przez fitry Spring Security-->
    <sec:http pattern="/vendor/**" security="none"/>
    <sec:http pattern="/css/**" security="none"/>
    <sec:http pattern="/js/**" security="none"/>
    <sec:http pattern="/img/**" security="none"/>
    <sec:http pattern="/fonts/**" security="none"/>

    <!-- Konfiguracja bezpieczeństwa Spring Security: -->
    <sec:http use-expressions="true" entry-point-ref="entryPoint">

        <sec:csrf disabled="true"/>

        <!-- Konfiguracja kontroli dostępu do URLi: -->
        <sec:intercept-url pattern="/api/auth/login" access="permitAll" />
        <sec:intercept-url pattern="/api/**" access="authenticated" />

        <!-- Filtr do uwierzytelniania z wykorzystaniem formularza.
        (login i hasło przesyłane w postaci jawnej w ciele żądania POST jako obiekt JSON): -->
        <sec:custom-filter ref="jsonAuthenticationFilter" position="FORM_LOGIN_FILTER" />


        <!-- Konfiguracja mechanizmu wylogowania.
        logout-url - Wysłanie żądania POST na wskazany URL powoduje wylogowanie użytkownika za pomocą mechanizmów w SS.
        logout-success-url - Adres, na który ma nastąpić przekierowanie po poprawnym wylogowaniu. -->
        <sec:logout logout-url="/api/auth/logout" logout-success-url="/" />
    </sec:http>

    <!-- Authentication Manager: -->
    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider ref="authenticationProvider"/>
    </sec:authentication-manager>

    <!-- Filtr uwierzytelniający w aplikacji na podstawie obiektu JSON zawartego w zawartości żądania HTTP: -->
    <bean id="jsonAuthenticationFilter" class="pl.lodz.p.security.JsonUsernamePasswordAuthenticationFilter"
          c:usernameJsonPropertyName="username" c:passwordJsonPropertyName="password" p:authenticationManager-ref="authenticationManager">
        <!-- Wysłanie żądania na ten URL powoduje wywołanie tego filtra: -->
        <property name="filterProcessesUrl" value="/api/auth/login" />
        <!-- Przyjmuj tylko żądania metodą POST: -->
        <property name="postOnly" value="true" />
    </bean>

    <bean id="userDetailsService" class="pl.lodz.p.security.LoginUserDetailsService"/>

    <bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider"
     p:userDetailsService-ref="userDetailsService" p:passwordEncoder-ref="passwordEncoder" />

    <bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"/>

    <bean id="entryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint"/>
</beans>